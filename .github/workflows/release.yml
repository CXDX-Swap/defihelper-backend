name: release

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - run: npm ci
      - if: github.event.release.prerelease == true
        run: npm run build-dev
        env:
          API_PORT: ${{secrets.API_PORT}}
          DATABASE_HOST: ${{secrets.DATABASE_HOST}}
          DATABASE_PORT: ${{secrets.DATABASE_PORT}}
          DATABASE_USER: ${{secrets.DATABASE_USER}}
          DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          DATABASE_NAME: ${{secrets.DATABASE_NAME}}
          CACHE_HOST: ${{secrets.CACHE_HOST}}
          CACHE_PORT: ${{secrets.CACHE_PORT}}
          CACHE_DATABASE: ${{secrets.CACHE_DATABASE}}
          SESSION_TTL: ${{secrets.REACT_APP_SID_LIFE_TIME}}
          ETH_NODE: ${{secrets.ETH_NODE}}
          BSC_NODE: ${{secrets.BSC_NODE}}
          ADAPTERS_HOST: https://backend-dev.defihelper.io/adapters
          SCANNER_HOST: https://scanner-dev.defihelper.io
      - if: github.event.release.prerelease == false
        run: npm run build
        env:
          API_PORT: ${{secrets.API_PORT}}
          DATABASE_HOST: ${{secrets.DATABASE_HOST}}
          DATABASE_PORT: ${{secrets.DATABASE_PORT}}
          DATABASE_USER: ${{secrets.DATABASE_USER}}
          DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          DATABASE_NAME: ${{secrets.DATABASE_NAME}}
          CACHE_HOST: ${{secrets.CACHE_HOST}}
          CACHE_PORT: ${{secrets.CACHE_PORT}}
          CACHE_DATABASE: ${{secrets.CACHE_DATABASE}}
          SESSION_TTL: ${{secrets.REACT_APP_SID_LIFE_TIME}}
          ETH_NODE: ${{secrets.ETH_NODE}}
          BSC_NODE: ${{secrets.BSC_NODE}}
          ADAPTERS_HOST: https://backend.defihelper.io/adapters
          SCANNER_HOST: https://scanner.defihelper.io
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-release
          path: |
            build

  publish:
    needs: build
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/

      - name: Download build-release
        uses: actions/download-artifact@v2
        with:
          name: build-release
          path: ./build

      - name: Publish dev
        if: github.event.release.prerelease == true
        run: |
          mkdir -pv $GITHUB_WORKSPACE
          cp -rf $GITHUB_WORKSPACE ~/$GITHUB_REPOSITORY-dev.new
          mv ~/$GITHUB_REPOSITORY-dev ~/$GITHUB_REPOSITORY-dev.old
          mv ~/$GITHUB_REPOSITORY-dev.new ~/$GITHUB_REPOSITORY-dev
          rm -rf ~/$GITHUB_REPOSITORY-dev.old

      - name: Publish stable
        if: github.event.release.prerelease == false
        run: |
          mkdir -pv $GITHUB_WORKSPACE
          cp -rf $GITHUB_WORKSPACE ~/$GITHUB_REPOSITORY.new
          mv ~/$GITHUB_REPOSITORY ~/$GITHUB_REPOSITORY.old
          mv ~/$GITHUB_REPOSITORY.new ~/$GITHUB_REPOSITORY
          rm -rf ~/$GITHUB_REPOSITORY.old

  cloudflare-purge:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Purge cloudflare cache
        uses: jakejarvis/cloudflare-purge-action@master
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
